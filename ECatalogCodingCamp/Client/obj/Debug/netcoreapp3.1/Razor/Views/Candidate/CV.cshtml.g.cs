#pragma checksum "D:\Visual Studio Source\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\Candidate\CV.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "123a32930dca3d48ef710c67c93c0e9d3f869269"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Candidate_CV), @"mvc.1.0.view", @"/Views/Candidate/CV.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Visual Studio Source\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\_ViewImports.cshtml"
using Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Visual Studio Source\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\_ViewImports.cshtml"
using Client.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"123a32930dca3d48ef710c67c93c0e9d3f869269", @"/Views/Candidate/CV.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3332004e6f18ccbec22253d7e177fe1fd5f40969", @"/Views/_ViewImports.cshtml")]
    public class Views_Candidate_CV : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("my-login-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("registerForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Visual Studio Source\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\Candidate\CV.cshtml"
  
    ViewData["Title"] = "E-Catalogue Coding Camp";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"card-body\">\r\n    <h4 class=\"card-title\">Update Experiences</h4>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "123a32930dca3d48ef710c67c93c0e9d3f8692694651", async() => {
                WriteLiteral(@"
        <!--List Organization-->
        <div class=""form-group"">
            <div class=""field_wrapperOrg"">
                <div>
                    <label for=""organization[0]"">Organization</label><br />
                    <input id=""organization[0]"" type=""text"" class=""form-control"" name=""organization[0]""");
                BeginWriteAttribute("value", " value=\"", 525, "\"", 533, 0);
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""Ex: Himpunan"" required /><br />
                    <div class=""invalid-feedback"">
                        Organization is required
                    </div>
                    <label for=""roleorganization[0]"">Role Organization</label><br />
                    <input id=""roleorganization[0]"" type=""text"" class=""form-control"" name=""roleorganization[0]""");
                BeginWriteAttribute("value", " value=\"", 908, "\"", 916, 0);
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""Ex: Ketua"" required /><br />
                    <div class=""invalid-feedback"">
                        Role Organization is required
                    </div>
                    <a href=""javascript:void(0);"" class=""add_buttonOrg"" title=""Add field"">Add More Organization and Role Organization</a> <br />
                </div>
            </div>
        </div>
        <!--List Skill-->
        <div class=""form-group"">
            <div class=""field_wrapperSkill"">
                <div>
                    <label for=""skill[0]"">Skill</label>
                    <input id=""skill[0]"" type=""text"" class=""form-control"" name=""skill[0]"" placeholder=""Ex: Python"" required><br />
                    <div class=""invalid-feedback"">
                        Skill is required
                    </div>
                    <a href=""javascript:void(0);"" class=""add_buttonSkill"" title=""Add field"">Add More Skills</a> <br />
                </div>
            </div>
        </div>
        <!--List ");
                WriteLiteral(@"Work-->
        <div class=""form-group"">
            <div class=""field_wrapperWork"">
                <div>
                    <label for=""work[0]"">Work Experience</label>
                    <input id=""work[0]"" type=""text"" class=""form-control"" name=""work[0]"" placeholder=""Ex: Metrodata"" required><br />
                    <div class=""invalid-feedback"">
                        Work is required
                    </div>
                    <a href=""javascript:void(0);"" class=""add_buttonWork"" title=""Add field"">Add More Works</a><br />
                </div>
            </div>
        </div>
        <button type=""submit"" class=""btn btn-primary btn-block"" id=""submit"">Update</button>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js""></script>
    <script>
        $(document).ready(function () {
            $(""#registerForm"").submit(function (e) {
                e.preventDefault();
            });

            //dynamic input Experiences Fields
            var maxField = 10; //input fields increment limitation

            //Organization Inputs
            var addButtonOrg = $('.add_buttonOrg');//add button Org
            var wrapperOrg = $('.field_wrapperOrg');//input field wrapper

            var countOrg = 1; //initial field counter Organization

            //Once add button is clicked
            $(addButtonOrg).click(function () {
                //check maximum number of input fields
                if (countOrg < maxField) {
                    $(wrapperOrg).append(`<div><label for=""organization[${countOrg}]"">Organization</label><br /><input id=""organization[${countOrg}]"" type=""text"" class=""form-control"" name=""organization[");
                WriteLiteral(@"${countOrg}]"" value="""" placeholder=""Ex: Himpunan"" required /><br /><div class=""invalid-feedback"">Organization is required</div><label for=""roleorganization[${countOrg}]"">Role Organization</label><br /><input id=""roleorganization[${countOrg}]"" type=""text"" class=""form-control"" name=""roleorganization[${countOrg}]"" value="""" placeholder=""Ex: Ketua"" required /><br /><div class=""invalid-feedback"">Role Organization is required</div> <a href=""javascript:void(0);"" class=""remove_button"">Remove Organization and Role Organization Field</a></div>`); //add field html
                    countOrg++; //increment field counter
                }
            });

            //Once remove button is clicked
            $(wrapperOrg).on('click', '.remove_button', function (e) {
                e.preventDefault();
                $(this).parent('div').remove(); //remove field html
                countOrg--; //decrement field counter
            });

            //Skill inputs
            var wrapperSkill = $('.field_w");
                WriteLiteral(@"rapperSkill');//input field wrapper
            var addButtonSkill = $('.add_buttonSkill');//add button Skill

            var countSkill = 1; //initial field counter Skills

            //Once add button is clicked
            $(addButtonSkill).click(function () {
                //check maximum number of input fields
                if (countSkill < maxField) {
                    $(wrapperSkill).append(`<div><label for=""skill[${countSkill}]"">Skill</label><input id=""skill[${countSkill}]"" type=""text"" class=""form-control"" name=""skill[${countSkill}]"" placeholder=""Ex: Python"" required><br /><div class=""invalid-feedback"">Skill is required</div> <a href=""javascript:void(0);"" class=""remove_button"">Remove Skill Field</a></div>`); //add field html
                    countSkill++; //increment field counter
                }
            });

            //Once remove button is clicked
            $(wrapperSkill).on('click', '.remove_button', function (e) {
                e.preventDefault();
        ");
                WriteLiteral(@"        $(this).parent('div').remove(); //remove field html
                countSkill--; //decrement field counter
            });

            //Work inputs
            var wrapperWork = $('.field_wrapperWork');//input field wrapper
            var addButtonWork = $('.add_buttonWork');//add button Skill

            var countWork = 1; //initial field counter Works

            //Once add button is clicked
            $(addButtonWork).click(function () {
                //check maximum number of input fields
                if (countWork < maxField) {
                    $(wrapperWork).append(`<div><label for=""work[${countWork}]"" >Work Experience</label><input id=""work[${countWork}]"" type=""text"" class=""form-control"" name=""work[${countWork}]"" placeholder=""Ex: Metrodata"" required><br /><div class=""invalid-feedback"">Work is required</div> <a href=""javascript:void(0);"" class=""remove_button"">Remove Work Field</a></div>`); //add field html
                    countWork++; //increment field counter
");
                WriteLiteral(@"                }
            });

            //Once remove button is clicked
            $(wrapperWork).on('click', '.remove_button', function (e) {
                e.preventDefault();
                $(this).parent('div').remove(); //remove field html
                countWork--; //decrement field counter
            });

            let InsertCV = () => {
                let Obj = new Object();
                Obj.Organizations = new Array();
                Obj.Skills = new Array();
                Obj.Works = new Array();

                for (let i = 0; i < countOrg; i++) {
                    Obj.Organizations[i] = new Object();
                    Obj.Organizations[i].OrganizationName = $(""#organization[""+i+""]"").val();
                    Obj.Organizations[i].RoleOrganization = $(`#roleorganization[${i}]`).val();
                    console.log($(""#organization["" + i + ""]"").val());
                }
                for (let j = 0; j < countSkill; j++) {
                    Obj.");
                WriteLiteral(@"Skills[j] = new Object();
                    Obj.Skills[j].SkillName = $(`#skill[${j}]`).val();
                }
                for (let k = 0; k < countWork; k++) {
                    Obj.Works[k] = new Object();
                    Obj.Works[k].WorkName = $(`#work[${k}]`).val();
                }

                console.log(JSON.stringify(Obj));
                alert(JSON.stringify(Obj));
                $.ajax({
                    url: '/Candidate/InsertCV',
                    type: 'POST',
                    data: Obj
                }).done((result) => {
                    console.log(result);
                    sAlertAdd();
                }).fail((result) => {
                    console.log(result);
                    alert(""Failed to Add Data!"");
                });
            }

            $(""#submit"").click(function () {
                InsertCV();
            })

            let sAlertAdd = () => {
                swal({
                    title: ""Done"",");
                WriteLiteral(@"
                    text: ""Data successfully added."",
                    icon: ""success"",
                    button: ""Ok"",
                }).then(() => {
                    location.reload(true);
                });
            }
        })
       
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
