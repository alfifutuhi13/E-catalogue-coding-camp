#pragma checksum "C:\Users\alfat\Documents\GitHub\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\Candidate\Organization.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6496f68e989847bbcbd31483345db6c5dda91538"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Candidate_Organization), @"mvc.1.0.view", @"/Views/Candidate/Organization.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\alfat\Documents\GitHub\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\_ViewImports.cshtml"
using Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\alfat\Documents\GitHub\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\_ViewImports.cshtml"
using Client.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6496f68e989847bbcbd31483345db6c5dda91538", @"/Views/Candidate/Organization.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3332004e6f18ccbec22253d7e177fe1fd5f40969", @"/Views/_ViewImports.cshtml")]
    public class Views_Candidate_Organization : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("my-login-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("registerForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\alfat\Documents\GitHub\E-catalogue-coding-camp\ECatalogCodingCamp\Client\Views\Candidate\Organization.cshtml"
  
    ViewData["Title"] = "E-Catalogue Coding Camp";
    Layout = "/Views/Shared/_LayoutCandidate.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<div class=\"card-body\">\n    <h4 class=\"card-title\">Update Your Organizations</h4><br />\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6496f68e989847bbcbd31483345db6c5dda915384802", async() => {
                WriteLiteral(@"
        <!--Id-->
        <input type=""hidden"" class=""form-control"" id=""number0"" name=""number0"">
        <!--List Organization-->
        <div class=""form-group"">
            <div class=""field_wrapperOrg"">
                <a href=""javascript:void(0);"" class=""add_buttonOrg"" title=""Add More Organization and Role Organization""><i class=""fas fa-plus-square""></i></a> <br />
                <div>
                    <label for=""organization0"">Organization</label><br />
                    <input id=""organization0"" type=""text"" class=""form-control"" name=""organization0""");
                BeginWriteAttribute("value", " value=\"", 837, "\"", 845, 0);
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""Ex: Himpunan"" required /><br />
                    <div class=""invalid-feedback"">
                        Organization is required
                    </div>
                    <label for=""roleorganization0"">Role Organization</label><br />
                    <input id=""roleorganization0"" type=""text"" class=""form-control"" name=""roleorganization0""");
                BeginWriteAttribute("value", " value=\"", 1209, "\"", 1217, 0);
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""Ex: Ketua"" required /><br />
                    <div class=""invalid-feedback"">
                        Role Organization is required
                    </div>
                </div>
            </div>
        </div>
        <button type=""submit"" class=""btn btn-primary btn-block"" id=""submit"">Submit</button>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</div>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js""></script>
    <script>
        $(document).ready(function () {
            $(""#registerForm"").submit(function (e) {
                e.preventDefault();
            });
            //dynamic input Experiences Fields
            let maxField = 10; //input fields increment limitation

            //Organization Inputs
            let addButtonOrg = $('.add_buttonOrg');//add button Org
            let wrapperOrg = $('.field_wrapperOrg');//input field wrapper

            countOrg = 1; //initial field counter Organization
            $.ajax({
                type: ""GET"",
                url: `/Candidate/GetOrganizationId/`,
                dataSrc: '',
                success: (data) => {
                    console.log(data);
                    let obj = JSON.parse(data);
                    alert(""Get Organization Id"");
                    console.log(obj);

                    if (obj.organizations.length > 1)
                ");
                WriteLiteral(@"    {
                        $(""#number0"").val(`${obj.organizations[0].OrganizationId}`);
                        $(""#organization0"").val(`${obj.organizations[0].OrganizationName}`);
                        $(""#roleorganization0"").val(`${obj.organizations[0].RoleOrganization}`);
                    }
                    

                    for (let i = 1; i < obj.organizations.length; i++) {
                        $(wrapperOrg).append(`<div><br /><a href=""javascript:void(0);"" class=""remove_button"" title=""Remove Organization and Role Organization Field""><i class=""fas fa-minus-square""></i></a><br /><input type=""hidden"" class=""form-control"" id=""number${i}"" name=""number${i}""><label for=""organization${i}"">Organization</label><br /><input id=""organization${i}"" type=""text"" class=""form-control"" name=""organization${i}"" value="""" placeholder=""Ex: Himpunan"" required /><br /><div class=""invalid-feedback"">Organization is required</div><label for=""roleorganization${i}"">Role Organization</label><br /><input id=""roleorgan");
                WriteLiteral(@"ization${i}"" type=""text"" class=""form-control"" name=""roleorganization${i}"" value="""" placeholder=""Ex: Ketua"" required /><br /><div class=""invalid-feedback"">Role Organization is required</div></div>`); //add field html
                        countOrg++; //increment field counter

                        $(`#number${i}`).val(`${obj.organizations[i].OrganizationId}`);
                        $(`#organization${i}`).val(`${obj.organizations[i].OrganizationName}`);
                        $(`#roleorganization${i}`).val(`${obj.organizations[i].RoleOrganization}`);
                    }

                },
                error: (data) => {
                    console.log(JSON.stringify(data));
                }
            });

            

            //Once add button is clicked
            $(addButtonOrg).click(function () {
                //check maximum number of input fields
                if (countOrg < maxField) {
                    $(wrapperOrg).append(`<div><br /><a href=""javascript:void(0);"" class=""rem");
                WriteLiteral(@"ove_button"" title=""Remove Organization and Role Organization Field""><i class=""fas fa-minus-square""></i></a><br /><input type=""hidden"" class=""form-control"" id=""number${countOrg}"" name=""number${countOrg}""><label for=""organization${countOrg}"">Organization</label><br /><input id=""organization${countOrg}"" type=""text"" class=""form-control"" name=""organization${countOrg}"" value="""" placeholder=""Ex: Himpunan"" required /><br /><div class=""invalid-feedback"">Organization is required</div><label for=""roleorganization${countOrg}"">Role Organization</label><br /><input id=""roleorganization${countOrg}"" type=""text"" class=""form-control"" name=""roleorganization${countOrg}"" value="""" placeholder=""Ex: Ketua"" required /><br /><div class=""invalid-feedback"">Role Organization is required</div> </div>`); //add field html
                    countOrg++; //increment field counter
                }
            });

            //Once remove button is clicked
            $(wrapperOrg).on('click', '.remove_button', function (e) {
              ");
                WriteLiteral(@"  e.preventDefault();
                $(this).parent('div').remove(); //remove field html
                countOrg--; //decrement field counter
            });

            $(""#submit"").click(function () {
                let Obj = new Object();
                Obj.Organizations = [];

                for (let i = 0; i < countOrg; i++) {
                    Obj.Organizations[i] = new Object();
                    Obj.Organizations[i].OrganizationId = $(`#number${i}`);
                    Obj.Organizations[i].OrganizationName = $(`#organization${i}`).val();
                    Obj.Organizations[i].RoleOrganization = $(`#roleorganization${i}`).val();
                }
                console.log(Obj);
                alert(""submit"");

                var checkOrgId = 0;

                for (let i = 0; i < countOrg; i++) {
                    if (Obj.Organizations[i].OrganizationId == """") {
                        checkOrgId++;
                    }
                }
                if (checkOrgId == 0) {
     ");
                WriteLiteral(@"               InsertOrganization(Obj);
                } else {
                    UpdateOrganization(Obj);
                }
            })

            let InsertOrganization = (Obj) => {
                console.log(Obj);
                //console.log(JSON.stringify(Obj));
                //alert(JSON.stringify(Obj));
                $.ajax({
                    url: '/Candidate/InsertOrganization',
                    type: 'POST',
                    data: Obj
                }).done((result) => {
                    if (result == 200) {
                        console.log(result);
                        sAlertAdd();
                    }
                    else {
                        alert(""Error Insert"");
                        console.log(result);
                    }
                }).fail((result) => {
                    console.log(result);
                    alert(""Failed to Add Data!"");
                });
            }

            let UpdateOrganization = (Obj) => {
                c");
                WriteLiteral(@"onsole.log(Obj);
                //console.log(JSON.stringify(Obj));
                //alert(JSON.stringify(Obj));
                $.ajax({
                    url: '/Candidate/UpdateOrganization',
                    type: 'PUT',
                    data: Obj
                }).done((result) => {
                    if (result == 200) {
                        console.log(result);
                        sAlertPut();
                    }
                    else {
                        alert(""Error Update"");
                        console.log(result);
                    }

                }).fail((result) => {
                    console.log(result);
                    alert(""Failed to Update Data!"");
                });
            }
        });

        

        


        let sAlertAdd = () => {
            swal({
                title: ""Done"",
                text: ""Data successfully added."",
                icon: ""success"",
                button: ""Ok"",
            }).then(() => {
               ");
                WriteLiteral(@" location.reload(true);
            });
        }

        let sAlertPut = () => {
            swal({
                title: ""Done"",
                text: ""Data successfully updated."",
                icon: ""success"",
                button: ""Ok"",
            }).then(() => {
                location.reload(true);
            });
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
